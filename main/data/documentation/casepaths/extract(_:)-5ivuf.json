{"abstract":[{"text":"Returns a function that can attempt to extract associated values from the given enum case","type":"text"},{"text":" ","type":"text"},{"text":"initializer.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"extract","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"embed","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> (","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"An enum case initializer."}],"type":"paragraph"}],"name":"embed"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"text":"A function that can attempt to extract associated values from an enum.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Use this function to create new transform functions to pass to higher-order methods like","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"compactMap"},{"text":":","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["[Result<Int, Error>.success(42), .failure(MyError()]","  .compactMap(extract(Result.success))","\/\/ [42]"]},{"style":"note","type":"aside","name":"Note","content":[{"inlineContent":[{"type":"text","text":"This function is only intended to be used with enum case initializers. Its behavior is"},{"type":"text","text":" "},{"type":"text","text":"otherwise undefined."}],"type":"paragraph"}]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use case path literal syntax (e.g., '\/Root.caseName')"}],"type":"paragraph"}],"metadata":{"modules":[{"name":"CasePaths"}],"externalID":"s:9CasePaths7extractyq_SgxSgcADq_cr0_lF","platforms":[],"symbolKind":"func","roleHeading":"Function","title":"extract(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"extract","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> (","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"sections":[],"variants":[{"paths":["\/documentation\/casepaths\/extract(_:)-5ivuf"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths"]]},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/extract(_:)-5ivuf","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.Parsing/documentation/CasePaths/extract(_:)-5ivuf":{"kind":"symbol","abstract":[{"text":"Returns a function that can attempt to extract associated values from the given enum case","type":"text"},{"text":" ","type":"text"},{"text":"initializer.","type":"text"}],"title":"extract(_:)","url":"\/documentation\/casepaths\/extract(_:)-5ivuf","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"extract","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> (","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"deprecated":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/extract(_:)-5ivuf","role":"symbol"},"doc://co.pointfree.Parsing/documentation/CasePaths":{"role":"collection","kind":"symbol","title":"CasePaths","type":"topic","url":"\/documentation\/casepaths","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths"}}}