{"kind":"article","metadata":{"role":"collectionGroup","modules":[{"name":"Parsing"}],"title":"ParserPrinter Implementations"},"topicSections":[{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVOV\/eraseToAnyParserPrinter()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVOV\/print(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVOV\/print(_:into:)"],"title":"Instance Methods"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVOV\/ParserPrinter-Implementations"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVOV"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"url":"\/documentation\/parsing\/parse","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","abstract":[{"text":"A parser that attempts to run a number of parsers to accumulate their outputs.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parse"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parse"}],"type":"topic","title":"Parse"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"url":"\/documentation\/parsing\/parserbuilder","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"type":"topic","title":"ParserBuilder"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVOVOV/print(_:into:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVOV\/print(_:into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"((","kind":"text"},{"text":"P2","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P4","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"), ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"P0","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ParserPrinter","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P1","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ParserPrinter","type":"codeVoice"},{"type":"text","text":", "},{"code":"P2","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ParserPrinter","type":"codeVoice"},{"type":"text","text":", "},{"code":"P3","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ParserPrinter","type":"codeVoice"},{"type":"text","text":", "},{"code":"P4","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ParserPrinter","type":"codeVoice"},{"type":"text","text":", "},{"code":"P5","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ParserPrinter","type":"codeVoice"},{"type":"text","text":", "},{"code":"P0.Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"P1.Input","type":"codeVoice"},{"type":"text","text":", "},{"code":"P0.Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Void","type":"codeVoice"},{"type":"text","text":", "},{"code":"P1.Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"P2.Input","type":"codeVoice"},{"type":"text","text":", "},{"code":"P1.Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Void","type":"codeVoice"},{"type":"text","text":", "},{"code":"P2.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"P3.Input","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P3.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"P4.Input","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P3.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P4.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"P5.Input","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"P5.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","type":"topic","abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}],"title":"print(_:into:)","url":"\/documentation\/parsing\/parserbuilder\/zipvvovov\/print(_:into:)"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVOVOV/eraseToAnyParserPrinter()":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVOV\/eraseToAnyParserPrinter()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing16AnyParserPrinterV","text":"AnyParserPrinter","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","type":"topic","abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"title":"eraseToAnyParserPrinter()","url":"\/documentation\/parsing\/parserbuilder\/zipvvovov\/erasetoanyparserprinter()"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"kind":"symbol","type":"topic","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Parser","kind":"identifier"}],"type":"topic","title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVOVOV":{"url":"\/documentation\/parsing\/parserbuilder\/zipvvovov","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVOV","abstract":[],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ZipVVOVOV"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipVVOVOV"}],"type":"topic","title":"ParserBuilder.ZipVVOVOV"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVOVOV/print(_:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVOV\/print(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"_EmptyInitializable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","type":"topic","abstract":[{"text":"Attempts to print a well-structured piece of data to something more nebulous.","type":"text"}],"title":"print(_:)","url":"\/documentation\/parsing\/parserbuilder\/zipvvovov\/print(_:)"}}}