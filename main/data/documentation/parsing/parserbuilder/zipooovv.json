{"metadata":{"title":"ParserBuilder.ZipOOOVV","role":"symbol","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing13ParserBuilderO8ZipOOOVVV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipOOOVV"}],"navigatorTitle":[{"kind":"identifier","text":"ZipOOOVV"}],"symbolKind":"struct","roleHeading":"Structure","extendedModule":"Parsing"},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOVV\/init(_:_:_:_:_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOVV\/p0","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOVV\/p1","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOVV\/p2","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOVV\/p3","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOVV\/p4"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOVV\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOVV\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOVV\/ParserPrinter-Implementations"],"title":"Default Implementations","generated":true}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parserbuilder\/zipooovv"]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOVV","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipOOOVV","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P0","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"P1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"P2","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"P3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P4"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser","preciseIdentifier":"s:7Parsing6ParserP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser","preciseIdentifier":"s:7Parsing6ParserP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P2"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser","preciseIdentifier":"s:7Parsing6ParserP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P3"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser","preciseIdentifier":"s:7Parsing6ParserP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P4"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser","preciseIdentifier":"s:7Parsing6ParserP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"P2"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P2"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"P3"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P3"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"P4"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P3"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P4"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"}],"languages":["swift"]}],"kind":"declarations"}],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOOVV/p1":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOVV\/p1","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"p1","kind":"identifier"},{"text":": ","kind":"text"},{"text":"P1","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipooovv\/p1","abstract":[],"title":"p1","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOOVV/p0":{"url":"\/documentation\/parsing\/parserbuilder\/zipooovv\/p0","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"p0","kind":"identifier"},{"text":": ","kind":"text"},{"text":"P0","kind":"typeIdentifier"}],"abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOVV\/p0","title":"p0","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Parser","kind":"identifier"}],"type":"topic","title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"kind":"symbol","type":"topic","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOOVV/p4":{"url":"\/documentation\/parsing\/parserbuilder\/zipooovv\/p4","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"p4","kind":"identifier"},{"text":": ","kind":"text"},{"text":"P4","kind":"typeIdentifier"}],"abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOVV\/p4","title":"p4","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOOVV/parse(_:)":{"url":"\/documentation\/parsing\/parserbuilder\/zipooovv\/parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> (","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P2","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOVV\/parse(_:)","title":"parse(_:)","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOOVV":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOVV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipOOOVV","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipooovv","navigatorTitle":[{"text":"ZipOOOVV","kind":"identifier"}],"abstract":[],"title":"ParserBuilder.ZipOOOVV","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOOVV/ParserPrinter-Implementations":{"abstract":[],"title":"ParserPrinter Implementations","url":"\/documentation\/parsing\/parserbuilder\/zipooovv\/parserprinter-implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOVV\/ParserPrinter-Implementations","kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"url":"\/documentation\/parsing\/parse","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","abstract":[{"text":"A parser that attempts to run a number of parsers to accumulate their outputs.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parse"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parse"}],"type":"topic","title":"Parse"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOOVV/init(_:_:_:_:_:)":{"abstract":[],"title":"init(_:_:_:_:_:)","url":"\/documentation\/parsing\/parserbuilder\/zipooovv\/init(_:_:_:_:_:)","role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P2","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P3","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P4","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOVV\/init(_:_:_:_:_:)","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"abstract":[{"text":"A ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"title":"ParserPrinter","url":"\/documentation\/parsing\/parserprinter","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","conformance":{"constraints":[{"type":"codeVoice","code":"P0"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ParserPrinter"},{"text":", ","type":"text"},{"type":"codeVoice","code":"P1"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ParserPrinter"},{"text":", ","type":"text"},{"type":"codeVoice","code":"P2"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ParserPrinter"},{"text":", ","type":"text"},{"type":"codeVoice","code":"P3"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"code":"P4","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ParserPrinter","type":"codeVoice"},{"type":"text","text":", "},{"code":"P0.Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"P1.Input","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P1.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"P2.Input","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P2.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"P3.Input","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P3.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"P4.Input","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P3.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"P4.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOOVV/Parser-Implementations":{"url":"\/documentation\/parsing\/parserbuilder\/zipooovv\/parser-implementations","type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOVV\/Parser-Implementations","title":"Parser Implementations","role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOOVV/p3":{"role":"symbol","title":"p3","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOVV\/p3","type":"topic","kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"p3","kind":"identifier"},{"text":": ","kind":"text"},{"text":"P3","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/parserbuilder\/zipooovv\/p3"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOOVV/p2":{"type":"topic","kind":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipooovv\/p2","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOVV\/p2","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"p2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P2"}],"abstract":[],"title":"p2"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"url":"\/documentation\/parsing\/parserbuilder","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"type":"topic","title":"ParserBuilder"}}}