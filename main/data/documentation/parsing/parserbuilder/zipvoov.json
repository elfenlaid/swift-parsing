{"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOV\/init(_:_:_:_:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOV\/p0","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOV\/p1","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOV\/p2","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOV\/p3"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOV\/parse(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOV\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOV\/ParserPrinter-Implementations"],"generated":true}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOV","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipVOOV"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P0"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P3"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP"},{"text":", ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP"},{"text":", ","kind":"text"},{"text":"P2","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP"},{"text":", ","kind":"text"},{"text":"P3","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP"},{"text":", ","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":", ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"P2","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P2","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"P3","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P3","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"metadata":{"title":"ParserBuilder.ZipVOOV","role":"symbol","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipVOOV","kind":"identifier"}],"roleHeading":"Structure","extendedModule":"Parsing","modules":[{"name":"Parsing"}],"navigatorTitle":[{"kind":"identifier","text":"ZipVOOV"}],"externalID":"s:7Parsing13ParserBuilderO7ZipVOOVV"},"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"],"type":"conformsTo","kind":"relationships"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parserbuilder\/zipvoov"]}],"sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOOV":{"title":"ParserBuilder.ZipVOOV","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ZipVOOV"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipVOOV"}],"abstract":[],"role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvoov","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOV","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","type":"topic","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"title":"ParserPrinter","role":"symbol","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"P0"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P1"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P2"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P3"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P0.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"P1.Input"},{"text":", ","type":"text"},{"type":"codeVoice","code":"P0.Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":", ","type":"text"},{"type":"codeVoice","code":"P1.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"P2.Input"},{"text":", ","type":"text"},{"type":"codeVoice","code":"P2.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"P3.Input"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"P3.Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"text":"A ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"reference"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"url":"\/documentation\/parsing\/parserprinter"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOOV/p0":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOV\/p0","type":"topic","title":"p0","role":"symbol","kind":"symbol","abstract":[],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"p0","kind":"identifier"},{"text":": ","kind":"text"},{"text":"P0","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/parserbuilder\/zipvoov\/p0"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOOV/parse(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOV\/parse(_:)","type":"topic","title":"parse(_:)","role":"symbol","kind":"symbol","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ("},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P2"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":")"}],"url":"\/documentation\/parsing\/parserbuilder\/zipvoov\/parse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOOV/p2":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOV\/p2","type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipvoov\/p2","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"p2","kind":"identifier"},{"text":": ","kind":"text"},{"text":"P2","kind":"typeIdentifier"}],"title":"p2","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"kind":"symbol","type":"topic","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOOV/p3":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOV\/p3","type":"topic","title":"p3","role":"symbol","kind":"symbol","abstract":[],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"p3","kind":"identifier"},{"text":": ","kind":"text"},{"text":"P3","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/parserbuilder\/zipvoov\/p3"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOOV/Parser-Implementations":{"title":"Parser Implementations","type":"topic","abstract":[],"role":"collectionGroup","url":"\/documentation\/parsing\/parserbuilder\/zipvoov\/parser-implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOV\/Parser-Implementations","kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOOV/ParserPrinter-Implementations":{"role":"collectionGroup","kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOV\/ParserPrinter-Implementations","type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipvoov\/parserprinter-implementations","title":"ParserPrinter Implementations","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Parser","kind":"identifier"}],"type":"topic","title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"url":"\/documentation\/parsing\/parse","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","abstract":[{"text":"A parser that attempts to run a number of parsers to accumulate their outputs.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parse"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parse"}],"type":"topic","title":"Parse"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOOV/init(_:_:_:_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOV\/init(_:_:_:_:)","type":"topic","title":"init(_:_:_:_:)","role":"symbol","kind":"symbol","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P2","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P3"},{"kind":"text","text":")"}],"url":"\/documentation\/parsing\/parserbuilder\/zipvoov\/init(_:_:_:_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOOV/p1":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOV\/p1","type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipvoov\/p1","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"p1","kind":"identifier"},{"text":": ","kind":"text"},{"text":"P1","kind":"typeIdentifier"}],"title":"p1","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"url":"\/documentation\/parsing\/parserbuilder","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"type":"topic","title":"ParserBuilder"}}}