{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/init()-8lvil"},"metadata":{"symbolKind":"init","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}]},"title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"extendedModule":"Parsing","externalID":"s:7Parsing3EndVAASsRszrlEACySsGycfc","roleHeading":"Initializer","modules":[{"name":"Parsing"}],"role":"symbol"},"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/end\/init()-8lvil"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"()"}],"platforms":["Linux"]}],"kind":"declarations"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Parser","kind":"identifier"}],"type":"topic","title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/End":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"End"}],"url":"\/documentation\/parsing\/end","type":"topic","abstract":[{"text":"A parser that succeeds if the input is empty, and fails otherwise.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"End"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","kind":"symbol","title":"End"},"doc://co.pointfree.Parsing/documentation/Parsing/End/init()-8lvil":{"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}]},"url":"\/documentation\/parsing\/end\/init()-8lvil","title":"init()","type":"topic","kind":"symbol","role":"symbol","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/init()-8lvil"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"kind":"symbol","type":"topic","title":"Parsing"}}}