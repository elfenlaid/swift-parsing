{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion"]]},"variants":[{"paths":["\/documentation\/parsing\/conversion\/input"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"associatedtype","externalID":"s:7Parsing10ConversionP5InputQa","required":true,"modules":[{"name":"Parsing"}],"role":"symbol","roleHeading":"Associated Type","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Input"}],"title":"Input"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/Input"},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/Input":{"type":"topic","required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Input"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/Input","kind":"symbol","abstract":[],"url":"\/documentation\/parsing\/conversion\/input","title":"Input"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"kind":"symbol","type":"topic","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"url":"\/documentation\/parsing\/conversion","type":"topic","abstract":[{"text":"Declares a type that can transform an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value ","type":"text"},{"inlineContent":[{"text":"and","type":"text"}],"type":"emphasis"},{"text":" transform an","type":"text"},{"text":" ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value back into an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","kind":"symbol","title":"Conversion"}}}