{"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/ParserPrinter-Implementations"},"metadata":{"title":"ParserPrinter Implementations","role":"collectionGroup","modules":[{"name":"Parsing"}]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/eraseToAnyParserPrinter()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/print()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/print(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/print(_:into:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/print(into:)"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo"]]},"sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/eraseToAnyParserPrinter()":{"url":"\/documentation\/parsing\/prefixupto\/erasetoanyparserprinter()","abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParserPrinter"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Parsing16AnyParserPrinterV","kind":"typeIdentifier","text":"AnyParserPrinter"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/eraseToAnyParserPrinter()","title":"eraseToAnyParserPrinter()","type":"topic","role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/print(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/print(_:)","abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data to something more nebulous."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"type":"topic","title":"print(_:)","url":"\/documentation\/parsing\/prefixupto\/print(_:)","role":"symbol","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"_EmptyInitializable"},{"text":".","type":"text"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/print(_:into:)":{"title":"print(_:into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"kind":"symbol","type":"topic","abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}],"role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"PrependableCollection"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/print(_:into:)","url":"\/documentation\/parsing\/prefixupto\/print(_:into:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Parser","kind":"identifier"}],"type":"topic","title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/print(into:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/print(into:)","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","title":"print(into:)","url":"\/documentation\/parsing\/prefixupto\/print(into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"kind":"symbol","abstract":[{"text":"Attempts to print into a nebulous piece of data.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/print()":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_EmptyInitializable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}]},"kind":"symbol","abstract":[{"text":"Attempts to print a nebulous piece of data.","type":"text"}],"title":"print()","url":"\/documentation\/parsing\/prefixupto\/print()","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/print()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"kind":"symbol","type":"topic","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"}],"url":"\/documentation\/parsing\/prefixupto","type":"topic","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"navigatorTitle":[{"text":"PrefixUpTo","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","kind":"symbol","title":"PrefixUpTo"}}}