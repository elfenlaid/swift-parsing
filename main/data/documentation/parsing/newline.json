{"sections":[],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/init()-3hk4u","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/init()-4xfjf","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/init()-9v1iv"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/parse(_:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/ParserPrinter-Implementations"],"title":"Default Implementations"}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Int","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Digits","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/String","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Bool","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Float","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CharacterSet","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/UUID","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CaseIterable","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Optionally","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/From","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUTF8View","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Stream"],"title":"Common parsers"}],"variants":[{"paths":["\/documentation\/parsing\/newline"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","interfaceLanguage":"swift"},"metadata":{"externalID":"s:7Parsing7NewlineV","modules":[{"name":"Parsing"}],"symbolKind":"struct","title":"Newline","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Newline"}],"navigatorTitle":[{"kind":"identifier","text":"Newline"}],"platforms":[],"roleHeading":"Structure","role":"symbol"},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"},{"text":"<","kind":"text"},{"text":"InputToBytes","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing10ConversionP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","text":"Conversion"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputToBytes"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Sl","text":"Collection","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:s4UTF8a","text":"UTF8","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO4UTF8O8CodeUnita","text":"CodeUnit","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use 'Whitespace(1, .vertical)' instead"}],"type":"paragraph"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Parser","kind":"identifier"}],"type":"topic","title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline/parse(_:)":{"title":"parse(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/newline\/parse(_:)","deprecated":true},"doc://co.pointfree.Parsing/documentation/Parsing/Newline/init()-4xfjf":{"kind":"symbol","deprecated":true,"url":"\/documentation\/parsing\/newline\/init()-4xfjf","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/init()-4xfjf","title":"init()","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"InputToBytes"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Conversions.SubstringToUTF8View"},{"type":"text","text":"."}]},"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Fail":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Fail"}],"url":"\/documentation\/parsing\/fail","type":"topic","abstract":[{"text":"A parser that always fails, no matter the input.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Fail"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","kind":"symbol","title":"Fail"},"doc://co.pointfree.Parsing/documentation/Parsing/Not":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not","title":"Not","navigatorTitle":[{"text":"Not","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Not","kind":"identifier"}],"url":"\/documentation\/parsing\/not","abstract":[{"type":"text","text":"A parser that succeeds if the given parser fails, and does not consume any input."}],"kind":"symbol","role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","title":"StartsWith","navigatorTitle":[{"text":"StartsWith","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StartsWith","kind":"identifier"}],"url":"\/documentation\/parsing\/startswith","abstract":[{"type":"text","text":"A parser that parses a sequence of elements from its input."}],"kind":"symbol","role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Digits":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Digits","title":"Digits","navigatorTitle":[{"text":"Digits","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Digits","kind":"identifier"}],"url":"\/documentation\/parsing\/digits","abstract":[{"type":"text","text":"A parser that consumes a number of digits from the beginning of a collection of UTF-8 code"},{"type":"text","text":" "},{"type":"text","text":"units."}],"kind":"symbol","role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"conformance":{"constraints":[{"code":"InputToBytes","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Conversion","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"PrependableCollection","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"InputToBytes.Input.SubSequence","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Output","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"PrependableCollection","type":"codeVoice"},{"type":"text","text":", "},{"code":"InputToBytes.Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"InputToBytes.Output.SubSequence","type":"codeVoice"},{"type":"text","text":", and "},{"code":"InputToBytes.Output.Element","type":"codeVoice"},{"type":"text","text":" is "},{"code":"UTF8.CodeUnit","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"url":"\/documentation\/parsing\/parserprinter","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"kind":"symbol","abstract":[{"type":"text","text":"A "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","isActive":true},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"type":"topic","title":"ParserPrinter"},"doc://co.pointfree.Parsing/documentation/Parsing/UUID":{"role":"article","url":"\/documentation\/parsing\/uuid","type":"topic","abstract":[{"text":"A parser that consumes a ","type":"text"},{"code":"UUID","type":"codeVoice"},{"text":" value from the beginning of a string.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/UUID","kind":"article","title":"UUID"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline/init()-3hk4u":{"kind":"symbol","title":"init()","role":"symbol","abstract":[],"type":"topic","deprecated":true,"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"InputToBytes"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Conversion"},{"text":", ","type":"text"},{"code":"InputToBytes.Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"InputToBytes.Input.SubSequence","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Output","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Output","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"InputToBytes.Output.SubSequence"},{"type":"text","text":", and "},{"type":"codeVoice","code":"InputToBytes.Output.Element"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UTF8.CodeUnit"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/init()-3hk4u","url":"\/documentation\/parsing\/newline\/init()-3hk4u","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">()"}]},"doc://co.pointfree.Parsing/documentation/Parsing/From":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"From","kind":"identifier"}],"url":"\/documentation\/parsing\/from","type":"topic","abstract":[],"navigatorTitle":[{"text":"From","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/From","kind":"symbol","title":"From"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","title":"Whitespace","navigatorTitle":[{"text":"Whitespace","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Whitespace","kind":"identifier"}],"url":"\/documentation\/parsing\/whitespace","abstract":[{"type":"text","text":"A parser that consumes whitespace from the beginning of input."}],"kind":"symbol","role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"kind":"symbol","type":"topic","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline/Parser-Implementations":{"role":"collectionGroup","kind":"article","title":"Parser Implementations","url":"\/documentation\/parsing\/newline\/parser-implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/Parser-Implementations","type":"topic","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"}],"url":"\/documentation\/parsing\/prefixupto","type":"topic","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"navigatorTitle":[{"text":"PrefixUpTo","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","kind":"symbol","title":"PrefixUpTo"},"doc://co.pointfree.Parsing/documentation/Parsing/Many":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Many"}],"url":"\/documentation\/parsing\/many","type":"topic","abstract":[{"text":"A parser that attempts to run another parser as many times as specified, accumulating the result","type":"text"},{"text":" ","type":"text"},{"text":"of the outputs.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Many"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","kind":"symbol","title":"Many"},"doc://co.pointfree.Parsing/documentation/Parsing/String":{"role":"article","url":"\/documentation\/parsing\/string","type":"topic","abstract":[{"text":"A parser that consumes a string literal from the beginning of a string.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/String","kind":"article","title":"String"},"doc://co.pointfree.Parsing/documentation/Parsing/CaseIterable":{"role":"article","url":"\/documentation\/parsing\/caseiterable","type":"topic","abstract":[{"text":"A parser-printer that consumes a case-iterable, raw representable value from the beginning of a","type":"text"},{"text":" ","type":"text"},{"text":"string.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CaseIterable","kind":"article","title":"CaseIterable"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}],"url":"\/documentation\/parsing\/newline","type":"topic","abstract":[],"navigatorTitle":[{"text":"Newline","kind":"identifier"}],"deprecated":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","kind":"symbol","title":"Newline"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixThrough"}],"url":"\/documentation\/parsing\/prefixthrough","type":"topic","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input through a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"PrefixThrough"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","kind":"symbol","title":"PrefixThrough"},"doc://co.pointfree.Parsing/documentation/Parsing/Float":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Float","title":"Float","url":"\/documentation\/parsing\/float","abstract":[{"type":"text","text":"A parser that consumes a floating-point number from the beginning of a string."}],"kind":"article","role":"article","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Consumed":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Consumed"}],"url":"\/documentation\/parsing\/consumed","type":"topic","abstract":[{"text":"A parser that returns the subsequence of input consumed by another parser.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Consumed"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed","kind":"symbol","title":"Consumed"},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromSubstring","kind":"identifier"}],"url":"\/documentation\/parsing\/fromsubstring","type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"FromSubstring"}],"deprecated":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring","kind":"symbol","title":"FromSubstring"},"doc://co.pointfree.Parsing/documentation/Parsing/FromUnicodeScalarView":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromUnicodeScalarView","kind":"identifier"}],"url":"\/documentation\/parsing\/fromunicodescalarview","type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"FromUnicodeScalarView"}],"deprecated":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView","kind":"symbol","title":"FromUnicodeScalarView"},"doc://co.pointfree.Parsing/documentation/Parsing/Bool":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Bool","title":"Bool","url":"\/documentation\/parsing\/bool","abstract":[{"type":"text","text":"A parser that consumes a Boolean value from the beginning of a string."}],"kind":"article","role":"article","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline/init()-9v1iv":{"kind":"symbol","deprecated":true,"url":"\/documentation\/parsing\/newline\/init()-9v1iv","title":"init()","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/init()-9v1iv","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"InputToBytes","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Conversions.Identity<Substring.UTF8View>","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","title":"Prefix","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"url":"\/documentation\/parsing\/prefix","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input."}],"kind":"symbol","role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/End":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"End"}],"url":"\/documentation\/parsing\/end","type":"topic","abstract":[{"text":"A parser that succeeds if the input is empty, and fails otherwise.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"End"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","kind":"symbol","title":"End"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"url":"\/documentation\/parsing\/parse","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","abstract":[{"text":"A parser that attempts to run a number of parsers to accumulate their outputs.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parse"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parse"}],"type":"topic","title":"Parse"},"doc://co.pointfree.Parsing/documentation/Parsing/CharacterSet":{"title":"CharacterSet","abstract":[{"type":"text","text":"A parser that consumes the characters contained in a "},{"type":"codeVoice","code":"CharacterSet"},{"type":"text","text":" from the beginning of a string."}],"url":"\/documentation\/parsing\/characterset","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CharacterSet","role":"article","type":"topic","kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","title":"Lazy","navigatorTitle":[{"text":"Lazy","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Lazy","kind":"identifier"}],"url":"\/documentation\/parsing\/lazy","abstract":[{"type":"text","text":"A parser that waits for a call to its "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)"},{"type":"text","text":" method before running the given closure to"},{"type":"text","text":" "},{"type":"text","text":"create a parser for the given input."}],"kind":"symbol","role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/OneOf":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OneOf"}],"url":"\/documentation\/parsing\/oneof","type":"topic","abstract":[{"text":"A parser that attempts to run a number of parsers till one succeeds.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"OneOf"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf","kind":"symbol","title":"OneOf"},"doc://co.pointfree.Parsing/documentation/Parsing/Stream":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Stream","title":"Stream","navigatorTitle":[{"text":"Stream","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Stream","kind":"identifier"}],"url":"\/documentation\/parsing\/stream","abstract":[{"type":"text","text":"A parser that can parse streams of input."}],"kind":"symbol","role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"url":"\/documentation\/parsing\/conversion","type":"topic","abstract":[{"text":"Declares a type that can transform an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value ","type":"text"},{"inlineContent":[{"text":"and","type":"text"}],"type":"emphasis"},{"text":" transform an","type":"text"},{"text":" ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value back into an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","kind":"symbol","title":"Conversion"},"doc://co.pointfree.Parsing/documentation/Parsing/Int":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Int","title":"Int","url":"\/documentation\/parsing\/int","abstract":[{"type":"text","text":"A parser that consumes an integer from the beginning of a string."}],"kind":"article","role":"article","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Skip":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Skip","kind":"identifier"}],"url":"\/documentation\/parsing\/skip","type":"topic","abstract":[{"text":"A parser that discards the output of another parser.","type":"text"}],"navigatorTitle":[{"text":"Skip","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","kind":"symbol","title":"Skip"},"doc://co.pointfree.Parsing/documentation/Parsing/First":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"identifier"}],"url":"\/documentation\/parsing\/first","type":"topic","abstract":[{"text":"A parser that consumes the first element from a collection.","type":"text"}],"navigatorTitle":[{"text":"First","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","kind":"symbol","title":"First"},"doc://co.pointfree.Parsing/documentation/Parsing/Optionally":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Optionally"}],"url":"\/documentation\/parsing\/optionally","type":"topic","abstract":[{"text":"A parser that runs the given parser and succeeds with ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if it fails.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Optionally"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Optionally","kind":"symbol","title":"Optionally"},"doc://co.pointfree.Parsing/documentation/Parsing/Always":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Always"}],"url":"\/documentation\/parsing\/always","type":"topic","abstract":[{"text":"A parser that always succeeds with the given value, and does not consume any input.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Always"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","kind":"symbol","title":"Always"},"doc://co.pointfree.Parsing/documentation/Parsing/Peek":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek","title":"Peek","navigatorTitle":[{"text":"Peek","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Peek","kind":"identifier"}],"url":"\/documentation\/parsing\/peek","abstract":[{"type":"text","text":"A parser that runs the given parser, but does not consume any input."}],"kind":"symbol","role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}],"url":"\/documentation\/parsing\/anyparser","type":"topic","abstract":[{"text":"A type-erased parser of ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" from ","type":"text"},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","kind":"symbol","title":"AnyParser"},"doc://co.pointfree.Parsing/documentation/Parsing/FromUTF8View":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromUTF8View","kind":"identifier"}],"url":"\/documentation\/parsing\/fromutf8view","type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"FromUTF8View"}],"deprecated":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUTF8View","kind":"symbol","title":"FromUTF8View"},"doc://co.pointfree.Parsing/documentation/Parsing/Rest":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","title":"Rest","navigatorTitle":[{"text":"Rest","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Rest","kind":"identifier"}],"url":"\/documentation\/parsing\/rest","abstract":[{"type":"text","text":"A parser that consumes everything to the end of the collection and returns this subsequence as"},{"type":"text","text":" "},{"type":"text","text":"its output."}],"kind":"symbol","role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline/ParserPrinter-Implementations":{"kind":"article","url":"\/documentation\/parsing\/newline\/parserprinter-implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/ParserPrinter-Implementations","title":"ParserPrinter Implementations","role":"collectionGroup","type":"topic","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy/parse(_:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LazyParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"LazyParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/lazy\/parse(_:)","type":"topic","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"type":"text","text":" "},{"type":"text","text":"input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)","kind":"symbol","title":"parse(_:)"}}}