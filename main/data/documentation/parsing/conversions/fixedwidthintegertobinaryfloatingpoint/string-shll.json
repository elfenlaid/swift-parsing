{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"string","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Map","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","text":"Map","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/SubstringToString","preciseIdentifier":"s:7Parsing11ConversionsO17SubstringToStringV","text":"SubstringToString","kind":"typeIdentifier"},{"text":"> { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"A fluent version of ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-3u2b5"},{"text":".","type":"text"}],"type":"paragraph"}]}],"abstract":[{"text":"Transforms this conversion to ","type":"text"},{"type":"codeVoice","code":"Substring"},{"text":" into a conversion to ","type":"text"},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/conversions\/fixedwidthintegertobinaryfloatingpoint\/string-shll"]}],"metadata":{"externalID":"s:7Parsing10ConversionPAASs6OutputRtzrlE6stringAA11ConversionsO3MapVy_xAH17SubstringToStringVGvp::SYNTHESIZED::s:7Parsing11ConversionsO38FixedWidthIntegerToBinaryFloatingPointV","conformance":{"constraints":[{"code":"Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"symbolKind":"property","roleHeading":"Instance Property","title":"string","role":"symbol","modules":[{"name":"Parsing"}],"extendedModule":"Parsing","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"string","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing11ConversionsO3MapV","kind":"typeIdentifier","text":"Map"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier","text":"Conversions"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing11ConversionsO17SubstringToStringV","kind":"typeIdentifier","text":"SubstringToString"},{"kind":"text","text":">"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint\/string-shll"},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint\/Conversion-Implementations"]]},"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"kind":"symbol","type":"topic","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/apply(_:)":{"role":"symbol","kind":"symbol","title":"apply(_:)","type":"topic","url":"\/documentation\/parsing\/conversion\/apply(_:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"apply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Attempts to transform an input into an output."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/apply(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","abstract":[{"type":"text","text":"A namespace for types that serve as conversions."}],"url":"\/documentation\/parsing\/conversions","navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"title":"Conversions","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Map":{"role":"symbol","kind":"symbol","title":"Conversions.Map","type":"topic","url":"\/documentation\/parsing\/conversions\/map","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Map","kind":"identifier"}],"abstract":[{"type":"text","text":"A conversion that composes two conversions together by composing their"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/apply(_:)"},{"type":"text","text":" functions and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/unapply(_:)"},{"type":"text","text":" functions together."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Map","navigatorTitle":[{"text":"Map","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FixedWidthIntegerToBinaryFloatingPoint":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A conversion from an "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" to a "},{"type":"codeVoice","code":"Double"},{"type":"text","text":"."}],"title":"Conversions.FixedWidthIntegerToBinaryFloatingPoint","url":"\/documentation\/parsing\/conversions\/fixedwidthintegertobinaryfloatingpoint","navigatorTitle":[{"kind":"identifier","text":"FixedWidthIntegerToBinaryFloatingPoint"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FixedWidthIntegerToBinaryFloatingPoint"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/SubstringToString":{"role":"symbol","kind":"symbol","title":"Conversions.SubstringToString","type":"topic","url":"\/documentation\/parsing\/conversions\/substringtostring","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubstringToString","kind":"identifier"}],"abstract":[{"type":"text","text":"A conversion from a substring to a string."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/SubstringToString","navigatorTitle":[{"text":"SubstringToString","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/string-swift.type.property-3u2b5":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"string","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing11ConversionsO17SubstringToStringV","kind":"typeIdentifier","text":"SubstringToString"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-3u2b5","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Conversions.SubstringToString"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","type":"topic","title":"string","url":"\/documentation\/parsing\/conversion\/string-swift.type.property-3u2b5","abstract":[{"text":"A conversion from ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FixedWidthIntegerToBinaryFloatingPoint/string-shll":{"type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"type":"text","text":"Transforms this conversion to "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":" into a conversion to "},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint\/string-shll","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Map","preciseIdentifier":"s:7Parsing11ConversionsO3MapV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubstringToString","preciseIdentifier":"s:7Parsing11ConversionsO17SubstringToStringV"},{"kind":"text","text":">"}],"title":"string","url":"\/documentation\/parsing\/conversions\/fixedwidthintegertobinaryfloatingpoint\/string-shll","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FixedWidthIntegerToBinaryFloatingPoint/Conversion-Implementations":{"abstract":[],"url":"\/documentation\/parsing\/conversions\/fixedwidthintegertobinaryfloatingpoint\/conversion-implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint\/Conversion-Implementations","kind":"article","title":"Conversion Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/unapply(_:)":{"role":"symbol","kind":"symbol","title":"unapply(_:)","type":"topic","url":"\/documentation\/parsing\/conversion\/unapply(_:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unapply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Attempts to transform an output back into an input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/unapply(_:)"}}}