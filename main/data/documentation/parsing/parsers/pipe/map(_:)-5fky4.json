{"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"extendedModule":"Parsing","modules":[{"name":"Parsing"}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO3MapV","text":"Map","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","title":"map(_:)","externalID":"s:7Parsing6ParserPAAE3mapyAA7ParsersO3MapVy_xqd__Gqd__6OutputQzclF::SYNTHESIZED::s:7Parsing7ParsersO4PipeV","symbolKind":"method"},"abstract":[{"type":"text","text":"Returns a parser that transforms the output of this parser with a given closure."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Map","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","preciseIdentifier":"s:7Parsing7ParsersO3MapV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}]}]},{"kind":"parameters","parameters":[{"name":"transform","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that transforms values of this parserâ€™s output."}]}]}]},{"content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"A parser of transformed outputs."}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is similar to "},{"type":"codeVoice","code":"Sequence.map"},{"type":"text","text":", "},{"type":"codeVoice","code":"Optional.map"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Result.map"},{"type":"text","text":" in the Swift"},{"type":"text","text":" "},{"type":"text","text":"standard library, as well as "},{"type":"codeVoice","code":"Publisher.map"},{"type":"text","text":" in the Combine framework."}]},{"level":2,"anchor":"Printability","type":"heading","text":"Printability"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Mapping a parser with a transform function results in a parser that cannot print. If you need"},{"type":"text","text":" "},{"type":"text","text":"to transform the output of a parser and retain printability, use the "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","type":"reference","isActive":true},{"type":"text","text":"-based"},{"type":"text","text":" "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-18m9d","type":"reference","isActive":true},{"type":"text","text":" operator instead."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers\/pipe\/map(_:)-5fky4"]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe\/map(_:)-5fky4","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe\/Parser-Implementations"]]},"sections":[],"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pipe/map(_:)-5fky4":{"url":"\/documentation\/parsing\/parsers\/pipe\/map(_:)-5fky4","title":"map(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO3MapV","kind":"typeIdentifier","text":"Map"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe\/map(_:)-5fky4","abstract":[{"type":"text","text":"Returns a parser that transforms the output of this parser with a given closure."}],"type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pipe/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe\/Parser-Implementations","type":"topic","title":"Parser Implementations","kind":"article","role":"collectionGroup","url":"\/documentation\/parsing\/parsers\/pipe\/parser-implementations","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pipe":{"title":"Parsers.Pipe","url":"\/documentation\/parsing\/parsers\/pipe","navigatorTitle":[{"text":"Pipe","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that runs this parser, pipes its output into the given parser, and returns the output"},{"type":"text","text":" "},{"type":"text","text":"of the given parser."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Pipe","kind":"identifier"}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"kind":"symbol","type":"topic","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Map":{"title":"Parsers.Map","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Map"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Map"}],"abstract":[{"text":"A parser that transforms the output of another parser with a given closure.","type":"text"}],"role":"symbol","url":"\/documentation\/parsing\/parsers\/map","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/map(_:)-18m9d":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"MapConversion","preciseIdentifier":"s:7Parsing7ParsersO13MapConversionV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/parsing\/parser\/map(_:)-18m9d","type":"topic","abstract":[{"text":"Returns a parser-printer that transforms the output of this parser with a given conversion.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-18m9d","kind":"symbol","title":"map(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"type":"topic","url":"\/documentation\/parsing\/parsers","kind":"symbol","role":"symbol","title":"Parsers","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"url":"\/documentation\/parsing\/conversion","type":"topic","abstract":[{"text":"Declares a type that can transform an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value ","type":"text"},{"inlineContent":[{"text":"and","type":"text"}],"type":"emphasis"},{"text":" transform an","type":"text"},{"text":" ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value back into an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","kind":"symbol","title":"Conversion"}}}