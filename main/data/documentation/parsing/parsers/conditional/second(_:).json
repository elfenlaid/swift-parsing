{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers\/conditional\/second(_:)"]}],"metadata":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"second"},{"text":"(","kind":"text"},{"text":"Second","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:7Parsing7ParsersO11ConditionalO6secondyAEy_xq_Gq_cAGmAA6ParserRzAaHR_5InputQy_AIRtz6OutputQy_ALRtzr0_lF","title":"Parsers.Conditional.second(_:)","modules":[{"name":"Parsing"}],"roleHeading":"Case","role":"symbol","symbolKind":"case"},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional\/second(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"second"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Second"},{"kind":"text","text":")"}]}],"kind":"declarations"}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Conditional":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conditional","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional","navigatorTitle":[{"text":"Conditional","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/conditional","kind":"symbol","abstract":[{"text":"A parser that can parse output from two types of parsers.","type":"text"}],"title":"Parsers.Conditional"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Conditional/second(_:)":{"type":"topic","title":"Parsers.Conditional.second(_:)","url":"\/documentation\/parsing\/parsers\/conditional\/second(_:)","kind":"symbol","abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional\/second(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"second","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Second","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"kind":"symbol","type":"topic","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"type":"topic","url":"\/documentation\/parsing\/parsers","kind":"symbol","role":"symbol","title":"Parsers","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}]}}}